//TC:O(n)
public class Inorder_Traversal {

    static class Node{
        int data;
        Node left;
        Node right;

        Node(int data){
            this.data=data;
            this.left=null;
            this.right=null;
        }
    }

    static class binaryTree{
        static int indx=-1;
        public static Node BuildTree(int[] nodes){
            indx++;
            if(nodes[indx]==-1){
                return null;
            }

            Node newNode  = new Node(nodes[indx]);
            newNode.left= BuildTree(nodes);
            newNode.right= BuildTree(nodes);
            return newNode;
        }

        public static void Inorder(Node root){
            if(root==null){
                return;
            }

            Inorder(root.left);
            System.out.print(root.data+" ");
            Inorder(root.right);

        }
    }


    public static void main(String[] args) {
        int nodes[]={1,2,4,-1,-1,5,-1,-1,3,-1,6,-1,-1};

        binaryTree tree = new binaryTree();
        Node root = tree.BuildTree(nodes);
        tree.Inorder(root);
    }
}
