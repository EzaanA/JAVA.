class Solution {

    public static boolean checkright(TreeNode root , int target){
        TreeNode ne=root.right; 
        if(ne !=null && ne.val == target && (ne.right==null && ne.left==null)){
            return true;
        }
        return false;
    }

    public static boolean checkleft(TreeNode root , int target){
    TreeNode ne=root.left; 
        if(ne !=null && ne.val == target && (ne.right==null && ne.left==null)){
            return true;
        }
        return false;
    }

    public static boolean check(TreeNode root){
        if(root.left==null && root.right==null){
            return true;
        }
        return false;
    }



    public TreeNode removeLeafNodes(TreeNode root, int target) {
        if(root==null){
            return null;
        }

        removeLeafNodes(root.left,target);
        removeLeafNodes(root.right,target);

        if(checkleft(root,target)){
            root.left=null;
        }
        
        if(checkright(root,target)){
            root.right=null;
        }

        if(root.val==target && check(root)){
            root=null;
            return null;
        }
        
        return root;
    }
}
