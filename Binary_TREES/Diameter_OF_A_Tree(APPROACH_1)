//TC O(n2)
public class Diameter_OF_A_Tree {

    static public class Node{
        int data;
        Node left;
        Node right;

        Node(int data){
            this.data=data;
            this.left=null;
            this.right=null;
        }
    }

    public static int height(Node root) {
        if (root == null) {
            return 0;
        }

        int left = height(root.left);
        int right = height(root.right);
        return Math.max(left, right) + 1;
    }

    public static int diameterOfaTree(Node root){
        if(root==null){
            return 0;
        }

        int leftdiam = diameterOfaTree(root.left);
        int leftht=height(root.left);
        int rightdiam=diameterOfaTree(root.right);
        int rightht = height(root.right);

        int selfdiam = leftht+rightht+1;

        int max=Math.max(leftdiam,rightdiam);
        max=Math.max(max,selfdiam);

        return max;

    }

    public static void main(String[] args) {
        Node root=new Node(1);
        root.left=new Node(2);
        root.right=new Node(3);
        root.left.left=new Node(4);
        root.left.right=new Node(5);
        root.right.left=new Node(6);
        root.right.right=new Node(7);

        System.out.println("Diameter of tree is : "+ diameterOfaTree(root));
    }
}
