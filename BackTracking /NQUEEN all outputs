public class NQueens {
    public static void printf(char board[][]){
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board.length;j++){
                System.out.print(board[i][j]+" ");
            }
            System.out.println();
        }
        System.out.println("________");
    }
    public static boolean movement_of_queen(char board[][],int row,int col){
        //vertical
        for(int i=board.length-1;i>=0;i--){
            if(board[i][col]=='Q'){
                return false;
            }
        }
        //diagonal left up
        for(int i=row-1,j=col-1;i>=0 && j>=0;i--,j--){
            if(board[i][j]=='Q'){
                return false;
            }
        }
        //diiagonal right up
        for(int  i=row-1,j=col+1;i>=0 && j<board.length;i--,j++){
            if(board[i][j]=='Q'){
                return false;
            }
        }
//_______________SO RATHER THAN USING THE ABOVE LOOPS U CAN USE THE BELOW LOOPS TO KEEP THINGS SIMPLE!!!._________
   // int r = row;
  // int c = col;
  // while(r>=0 && c>=0){
  //   if(v[r][c]=='Q'){
  //     return false;
  //   }
  //   r--;
  //   c--;
  // }

  // r = row;
  //  c = col;
  // while(r>=0 && c<=v.size()){
  //   if(v[r][c]=='Q'){
  //     return false;
  //   }
  //   r--;
  //   c++;
  // }
//_______________________________________

        return true;
    }
    public static  void NQueensproblem(char board[][],int row){
        if(row==board.length){
            printf(board);
            return;
        }
    for(int j=0;j<board.length;j++){
        if(movement_of_queen(board,row,j)) {
            board[row][j] = 'Q';
            NQueensproblem(board, row + 1);//agli row me queen ko bhitane k lie call
            //ab maanlo j pe bhet gyi ab 'Q' so j+2 pe bhi bhitana hai so pichle j s Q ko hatana hoga;
            board[row][j] = 'x';//BACKTRACK
        }
        }
    }
    public static void main(String[] args) {
Scanner sc = new Scanner(System.in);
    int n=sc.nextInt();
    char Board[][]=new char[n][n];
    for(int i=0;i<Board.length;i++){
        for(int j=0;j<Board.length;j++){
            Board[i][j]='x';
        }
    }
    NQueensproblem(Board,0);
    }
}
