import java.util.*;
public class printFromRootToLeaf {

    static class Node{
        int val;
        Node left;
        Node right;

        public Node(int data){
            this.val =data;
        }
    }

    public static Node insert(Node root, int val){
        if(root == null){
            root = new Node(val);
            return root;
        }
        if(root.val > val){
            root.left=insert(root.left,val);
        }
        else{
            root.right=insert(root.right,val);
        }
        return root;
    }

        static ArrayList<Integer> path = new ArrayList<>();
    public static void printFromrootTolev(Node root){
        if(root==null){
            return;
        }
        path.add(root.val);
        if(root.left==null && root.right==null){
            printPath(path);
        }
        printFromrootTolev(root.left);
        printFromrootTolev(root.right);
        path.remove(path.size()-1);
    }

    public static void  printPath(ArrayList<Integer> path) {
        for(int i =0; i<path.size(); i++){
            System.out.print(path.get(i)+" ");
        }
        System.out.println();

    }
    public static void main(String[] args) {
        int values[]={8,5,3,1,4,6,10,11,14};
        Node root = null;
        for(int i =0;i<values.length;i++){
            root=insert(root,values[i]);
        }

        printFromrootTolev(root);
    }
}
