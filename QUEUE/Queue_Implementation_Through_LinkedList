public class QueueImpLink {

    static class Node{
        int data;
        Node next;

         Node(int data){
             this.data = data;
             next = null;
        }
    }

    static class Queue {
        static Node head = null;
        static Node tail = null;

        public static boolean isEmpty() {
            return head == null && tail == null;
        }

        public static void add(int data) {
            Node newNode = new Node(data);
            if (head == null) {
                head = tail = newNode;
                return;
            }

            tail.next = newNode;
            tail = newNode;
        }

        public static int remove() {
            Node temp = head;
            if (isEmpty()) {
                System.out.println("QUEUE IS FULL");
                return -1;
            }
            int front = head.data;

            if (tail == head) {//this condition is for single element
                tail = head = null;
            } else {
                head = head.next;
            }
            return front;
        }

        public static int peek() {
            if (isEmpty()) {
                System.out.println("ISI EMPTYYYY");
                return -1;
            }
            return head.data;
        }


        public static void display() {
            Node temp = head;
//            System.out.println(temp.data);
            while(temp!=null){
                System.out.println(temp.data+" ");
                temp=temp.next;
            }
        }
    }
    public static void main(String[] args) {
    Queue que= new Queue();
    que.add(5);
    que.add(7);
    que.add(15);
    que.add(10);
    que.display();//---.to print through function
        
        //else to print directly
//        while(!que.isEmpty()){
//            System.out.println(que.peek());
//            que.remove();
//        }
    }
}
