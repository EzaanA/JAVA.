public class QueueImp {

     static class Queue {
         static int arr[];
        static  int size;
        static int rear;
        Queue(int n) {
            arr = new int[n];
            size = n;
            rear = -1;
        }

        //to check whether queue is empty or not
        static  boolean isEmpty() {
          return rear==-1;
        }
        //to add an element to a queue
        static  void add(int data){
            if(rear == size-1){
                System.out.println("QUEUE IS FULL");
                return;
            }
            rear+=1;
            arr[rear]=data;
        }

        //to remove an element from a queue
        static public  int remove(){
            if(isEmpty()){
                System.out.println("THE QUEUE IS EMPTY");
                return -1;
            }
            int front= arr[0];
            for(int i=0;i<rear;i++){
                arr[i]=arr[i+1];
            }
            rear--;//cuz like jab size ghtega to fir rear bbhi to peeche aayga
            return front;
        }

        //peek function
        static int peek(){
            if(isEmpty()){
                System.out.println("THE QUEUE IS EMPTY");
                return -1;
            }
            return arr[0];
        }

        static  void display(){
            if(isEmpty()){
                System.out.println("QUEUE IS EMPTY");
                return;
            }
            for(int i=0;i<=rear;i++){
                System.out.print(arr[i]+" ");
            }

        }


    }

    public static void main(String[] args) {
    Queue que= new Queue(5);//Queue(array ka size)
    que.add(10);
    que.add(7);
    que.add(5);
    que.add(3);
    que.add(13);
//    que.display();---> if u wanna do through function then use this 
//    else this one  
        while(!que.isEmpty()){
            System.out.print(que.peek()+" ");
            que.remove();
        }

    }

}
