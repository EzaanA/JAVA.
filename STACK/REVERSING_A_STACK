import java.util.ArrayList;
import java.util.Stack;

public class Reverse_A_Stack {

    static class Node{
        int data;
        Node next;
        public Node(int data){
            this.data= data;
            this.next= null;
        }
    }


    static class Stack{
        static Node head = null;//more like creating a head node or like a likedlist has been created inside the stack
        public static boolean isEmpty(){
            if(head==null){
                return true;
            }
            return false;
        }

        //push
        public static void push(int data){
            Node newNode = new Node(data);
            if(isEmpty()){
                head= newNode;
                return;
            }
            newNode.next= head;
            head= newNode;
        }


        public static int pop(){
            int top= head.data;
            head=head.next;
            return top;
        }
        public static int peek(){
            int top= head.data;
            return  top;
        }

        public static void print(){
            Node temp = head;
            while(temp!=null){
                System.out.println(temp.data);
                temp= temp.next;
            }
        }

        public static void pushatbottom(Stack s,int data){
            if(isEmpty()){
                s.push(data);
                return;
            }
            int el=s.pop();
            pushatbottom(s,data);
            s.push(el);
        }

        public static void revstk(Stack s){
            if(isEmpty()){
                return;
            }
            int el = s.pop();
            revstk(s);
            pushatbottom(s,el);
        }

    }
    public static void main(String[] args) {
        Stack s = new Stack();
        s.push(1);
        s.push(2);
        s.push(3);
        s.push(4);
        s.revstk(s);
        s.print();
    }
}
