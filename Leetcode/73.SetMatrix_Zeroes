//found out the coordinates of where there was a zero -> stored them into an arraylist -> then started making the numbers from the extreme right & low to 0
//Not an optimal one.

class Solution {
    public void setZeroes(int[][] matrix) {

        ArrayList<ArrayList<Integer>> nstlist = new ArrayList<ArrayList<Integer>>();
                for(int i=0;i<matrix.length;i++){
                    for(int j=0;j<matrix[0].length;j++){
                        if(matrix[i][j]==0){
                            ArrayList<Integer> list = new ArrayList<Integer>();
                            list.add(i);
                            list.add(j);
                            nstlist.add(list);
                        }
                    }
                }
                // for(int k=0;k<)
                // System.out.println(nstlist);
                // System.out.println(matrix.length+" "+matrix[0].length);
                int size=matrix.length-1;
                int right=matrix[0].length-1;
                for(int b=0;b<nstlist.size();b++){
                    int extremeLowi=size;
                    int extremeLowj=nstlist.get(b).get(1);
                    int extremeRighti=nstlist.get(b).get(0);
                    int extremeRightj=right;
//                    System.out.print("("+extremeLowi+","+extremeLowj+")");
//                    System.out.print("("+extremeRighti+","+extremeRightj+")");
//                    System.out.println();
                    for(int i=extremeLowi;i>=0;i--){
                        matrix[i][extremeLowj]=0;
//                        System.out.print("-->("+i+","+extremeLowj+")");
                    }
                    for(int i2=extremeRightj;i2>=0;i2--){
                        matrix[extremeRighti][i2]=0;
                    }
                }
        
        for(int i=0;i<matrix.length;i++){
            for(int j=0;j<matrix[0].length;j++){
                System.out.println(matrix[i][j]);
            }
            System.out.println();
        }
    }
}
